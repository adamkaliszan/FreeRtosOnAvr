   1               		.file	"spi.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 272               	.global	spiInit
 274               	spiInit:
 275               		.stabd	46,0,0
   1:../../../../Lib/spi.c **** #include <stdlib.h>
   2:../../../../Lib/spi.c **** #include <avr/io.h>
   3:../../../../Lib/spi.c **** #include "FreeRTOS.h"
   4:../../../../Lib/spi.c **** #include "queue.h"
   5:../../../../Lib/spi.c **** #include "task.h"
   6:../../../../Lib/spi.c **** #include "hardware.h"
   7:../../../../Lib/spi.c **** #include "spi.h"
   8:../../../../Lib/spi.c **** #include "semphr.h"
   9:../../../../Lib/spi.c **** 
  10:../../../../Lib/spi.c **** 
  11:../../../../Lib/spi.c **** void spiInit(void (*disableAllSpiDevicesFun)(void))
  12:../../../../Lib/spi.c **** {
 277               	.LM0:
 278               	.LFBB1:
 279               	/* prologue: function */
 280               	/* frame size = 0 */
 281               	/* stack size = 0 */
 282               	.L__stack_usage = 0
  13:../../../../Lib/spi.c ****   disableAllSpiDevicesFun();
 284               	.LM1:
 285 0000 FC01      		movw r30,r24
 286 0002 0995      		icall
  14:../../../../Lib/spi.c ****   portENTER_CRITICAL();
 288               	.LM2:
 289               	/* #APP */
 290               	 ;  14 "../../../../Lib/spi.c" 1
 291 0004 0FB6      		in		__tmp_reg__, __SREG__
 292               	 ;  0 "" 2
 293               	 ;  14 "../../../../Lib/spi.c" 1
 294 0006 F894      		cli
 295               	 ;  0 "" 2
 296               	 ;  14 "../../../../Lib/spi.c" 1
 297 0008 0F92      		push	__tmp_reg__
 298               	 ;  0 "" 2
  15:../../../../Lib/spi.c ****   vSemaphoreCreateBinary(xSemaphoreSpiSS);
 300               	.LM3:
 301               	/* #NOAPP */
 302 000a 60E0      		ldi r22,0
 303 000c 81E0      		ldi r24,lo8(1)
 304 000e 0E94 0000 		call xQueueCreate
 305 0012 9093 0000 		sts xSemaphoreSpiSS+1,r25
 306 0016 8093 0000 		sts xSemaphoreSpiSS,r24
 307 001a 0097      		sbiw r24,0
 308 001c 01F0      		breq .L2
 310               	.LM4:
 311 001e 20E0      		ldi r18,0
 312 0020 40E0      		ldi r20,0
 313 0022 50E0      		ldi r21,0
 314 0024 60E0      		ldi r22,0
 315 0026 70E0      		ldi r23,0
 316 0028 0E94 0000 		call xQueueGenericSend
 317               	.L2:
  16:../../../../Lib/spi.c **** 
  17:../../../../Lib/spi.c ****   SPCR  = (1<<SPE)|(1<<MSTR)|(1<<SPIE)|(1<<SPR0) ;  //TODO Adam: użyć odpowiednich nazw rejestró
 319               	.LM5:
 320 002c 81ED      		ldi r24,lo8(-47)
 321 002e 8DB9      		out 0xd,r24
  18:../../../../Lib/spi.c ****   //SPSR |= (1<<SPI2X);
  19:../../../../Lib/spi.c **** 
  20:../../../../Lib/spi.c ****   portEXIT_CRITICAL();
 323               	.LM6:
 324               	/* #APP */
 325               	 ;  20 "../../../../Lib/spi.c" 1
 326 0030 0F90      		pop		__tmp_reg__
 327               	 ;  0 "" 2
 328               	 ;  20 "../../../../Lib/spi.c" 1
 329 0032 0FBE      		out		__SREG__, __tmp_reg__
 330               	 ;  0 "" 2
 331               	/* #NOAPP */
 332 0034 0895      		ret
 334               	.Lscope1:
 336               		.stabd	78,0,0
 338               	.global	spiSetCPHA
 340               	spiSetCPHA:
 341               		.stabd	46,0,0
  21:../../../../Lib/spi.c **** 
  22:../../../../Lib/spi.c ****   //mode 0,0
  23:../../../../Lib/spi.c **** }
  24:../../../../Lib/spi.c **** 
  25:../../../../Lib/spi.c **** void spiSetCPHA(void)
  26:../../../../Lib/spi.c **** {
 343               	.LM7:
 344               	.LFBB2:
 345               	/* prologue: function */
 346               	/* frame size = 0 */
 347               	/* stack size = 0 */
 348               	.L__stack_usage = 0
  27:../../../../Lib/spi.c ****   SPCR |= (1<<CPHA);
 350               	.LM8:
 351 0036 6A9A      		sbi 0xd,2
 352 0038 0895      		ret
 354               	.Lscope2:
 356               		.stabd	78,0,0
 358               	.global	spiClearCPHA
 360               	spiClearCPHA:
 361               		.stabd	46,0,0
  28:../../../../Lib/spi.c **** }
  29:../../../../Lib/spi.c **** 
  30:../../../../Lib/spi.c **** void spiClearCPHA(void)
  31:../../../../Lib/spi.c **** {
 363               	.LM9:
 364               	.LFBB3:
 365               	/* prologue: function */
 366               	/* frame size = 0 */
 367               	/* stack size = 0 */
 368               	.L__stack_usage = 0
  32:../../../../Lib/spi.c ****   SPCR &= ~(1<<CPHA);
 370               	.LM10:
 371 003a 6A98      		cbi 0xd,2
 372 003c 0895      		ret
 374               	.Lscope3:
 376               		.stabd	78,0,0
 378               	.global	spiSetCPOL
 380               	spiSetCPOL:
 381               		.stabd	46,0,0
  33:../../../../Lib/spi.c **** }
  34:../../../../Lib/spi.c **** 
  35:../../../../Lib/spi.c **** void spiSetCPOL(void)
  36:../../../../Lib/spi.c **** {
 383               	.LM11:
 384               	.LFBB4:
 385               	/* prologue: function */
 386               	/* frame size = 0 */
 387               	/* stack size = 0 */
 388               	.L__stack_usage = 0
  37:../../../../Lib/spi.c ****   SPCR |= (1<<CPOL);
 390               	.LM12:
 391 003e 6B9A      		sbi 0xd,3
 392 0040 0895      		ret
 394               	.Lscope4:
 396               		.stabd	78,0,0
 398               	.global	spiClearCPOL
 400               	spiClearCPOL:
 401               		.stabd	46,0,0
  38:../../../../Lib/spi.c **** }
  39:../../../../Lib/spi.c **** 
  40:../../../../Lib/spi.c **** void spiClearCPOL(void)
  41:../../../../Lib/spi.c **** {
 403               	.LM13:
 404               	.LFBB5:
 405               	/* prologue: function */
 406               	/* frame size = 0 */
 407               	/* stack size = 0 */
 408               	.L__stack_usage = 0
  42:../../../../Lib/spi.c ****   SPCR &= ~(1<<CPOL);
 410               	.LM14:
 411 0042 6B98      		cbi 0xd,3
 412 0044 0895      		ret
 414               	.Lscope5:
 416               		.stabd	78,0,0
 418               	.global	spiTake
 420               	spiTake:
 421               		.stabd	46,0,0
  43:../../../../Lib/spi.c **** }
  44:../../../../Lib/spi.c **** 
  45:../../../../Lib/spi.c **** void spiTake(void)
  46:../../../../Lib/spi.c **** {
 423               	.LM15:
 424               	.LFBB6:
 425               	/* prologue: function */
 426               	/* frame size = 0 */
 427               	/* stack size = 0 */
 428               	.L__stack_usage = 0
  47:../../../../Lib/spi.c ****   xSemaphoreTake(xSemaphoreSpiSS, portMAX_DELAY);
 430               	.LM16:
 431 0046 20E0      		ldi r18,0
 432 0048 4FEF      		ldi r20,lo8(-1)
 433 004a 5FEF      		ldi r21,lo8(-1)
 434 004c 60E0      		ldi r22,0
 435 004e 70E0      		ldi r23,0
 436 0050 8091 0000 		lds r24,xSemaphoreSpiSS
 437 0054 9091 0000 		lds r25,xSemaphoreSpiSS+1
 438 0058 0C94 0000 		jmp xQueueGenericReceive
 440               	.Lscope6:
 442               		.stabd	78,0,0
 444               	.global	spiGive
 446               	spiGive:
 447               		.stabd	46,0,0
  48:../../../../Lib/spi.c **** }
  49:../../../../Lib/spi.c **** 
  50:../../../../Lib/spi.c **** void spiGive(void)
  51:../../../../Lib/spi.c **** {
 449               	.LM17:
 450               	.LFBB7:
 451               	/* prologue: function */
 452               	/* frame size = 0 */
 453               	/* stack size = 0 */
 454               	.L__stack_usage = 0
  52:../../../../Lib/spi.c ****   xSemaphoreGive(xSemaphoreSpiSS);
 456               	.LM18:
 457 005c 20E0      		ldi r18,0
 458 005e 40E0      		ldi r20,0
 459 0060 50E0      		ldi r21,0
 460 0062 60E0      		ldi r22,0
 461 0064 70E0      		ldi r23,0
 462 0066 8091 0000 		lds r24,xSemaphoreSpiSS
 463 006a 9091 0000 		lds r25,xSemaphoreSpiSS+1
 464 006e 0C94 0000 		jmp xQueueGenericSend
 466               	.Lscope7:
 468               		.stabd	78,0,0
 471               		.weak	spiSend
 473               	spiSend:
 474               		.stabd	46,0,0
  53:../../../../Lib/spi.c **** }
  54:../../../../Lib/spi.c **** 
  55:../../../../Lib/spi.c **** uint8_t spiSend(uint8_t data)          { (void) data;  return 0; }
 476               	.LM19:
 477               	.LFBB8:
 478               	/* prologue: function */
 479               	/* frame size = 0 */
 480               	/* stack size = 0 */
 481               	.L__stack_usage = 0
 483               	.LM20:
 484 0072 80E0      		ldi r24,0
 485 0074 0895      		ret
 487               	.Lscope8:
 489               		.stabd	78,0,0
 492               		.weak	spiSendSpinBlock
 494               	spiSendSpinBlock:
 495               		.stabd	46,0,0
  56:../../../../Lib/spi.c **** uint8_t spiSendSpinBlock(uint8_t data) { (void) data;  return 0; }
 497               	.LM21:
 498               	.LFBB9:
 499               	/* prologue: function */
 500               	/* frame size = 0 */
 501               	/* stack size = 0 */
 502               	.L__stack_usage = 0
 504               	.LM22:
 505 0076 80E0      		ldi r24,0
 506 0078 0895      		ret
 508               	.Lscope9:
 510               		.stabd	78,0,0
 511               		.comm	lockSensors,2,1
 512               		.comm	portB,1,1
 513               		.comm	portA,1,1
 514               		.comm	czasRtc,7,1
 515               		.comm	sockets,2,1
 516               		.comm	tcpDebugLevel,1,1
 517               		.comm	tcpDebugStream,2,1
 518               		.comm	IpMyConfig,15,1
 519               		.comm	udpDbgLevel,1,1
 520               		.comm	udpDbgStream,2,1
 521               		.comm	udpSocket,2,1
 522               		.comm	icmpDebugLevel,1,1
 523               		.comm	icmpDebug,2,1
 524               		.comm	arpDebugLevel,1,1
 525               		.comm	arpDebug,2,1
 526               		.comm	nicState,14,1
 527               		.comm	xSemaphoreSpiSS,2,1
 528               		.comm	xSemaphoreRs485,2,1
 529               		.comm	rollers,2,1
 530               		.comm	klastry,128,1
 531               		.comm	wwwport,1,1
 554               	.Letext0:
 555               		.ident	"GCC: (GNU) 4.9.2"
 556               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 spi.c
     /tmp/cc6JLjLx.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc6JLjLx.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc6JLjLx.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc6JLjLx.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cc6JLjLx.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc6JLjLx.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc6JLjLx.s:274    .text:0000000000000000 spiInit
                            *COM*:0000000000000002 xSemaphoreSpiSS
     /tmp/cc6JLjLx.s:340    .text:0000000000000036 spiSetCPHA
     /tmp/cc6JLjLx.s:360    .text:000000000000003a spiClearCPHA
     /tmp/cc6JLjLx.s:380    .text:000000000000003e spiSetCPOL
     /tmp/cc6JLjLx.s:400    .text:0000000000000042 spiClearCPOL
     /tmp/cc6JLjLx.s:420    .text:0000000000000046 spiTake
     /tmp/cc6JLjLx.s:446    .text:000000000000005c spiGive
     /tmp/cc6JLjLx.s:473    .text:0000000000000072 spiSend
     /tmp/cc6JLjLx.s:494    .text:0000000000000076 spiSendSpinBlock
                            *COM*:0000000000000002 lockSensors
                            *COM*:0000000000000001 portB
                            *COM*:0000000000000001 portA
                            *COM*:0000000000000007 czasRtc
                            *COM*:0000000000000002 sockets
                            *COM*:0000000000000001 tcpDebugLevel
                            *COM*:0000000000000002 tcpDebugStream
                            *COM*:000000000000000f IpMyConfig
                            *COM*:0000000000000001 udpDbgLevel
                            *COM*:0000000000000002 udpDbgStream
                            *COM*:0000000000000002 udpSocket
                            *COM*:0000000000000001 icmpDebugLevel
                            *COM*:0000000000000002 icmpDebug
                            *COM*:0000000000000001 arpDebugLevel
                            *COM*:0000000000000002 arpDebug
                            *COM*:000000000000000e nicState
                            *COM*:0000000000000002 xSemaphoreRs485
                            *COM*:0000000000000002 rollers
                            *COM*:0000000000000080 klastry
                            *COM*:0000000000000001 wwwport

UNDEFINED SYMBOLS
xQueueCreate
xQueueGenericSend
xQueueGenericReceive
__do_clear_bss
