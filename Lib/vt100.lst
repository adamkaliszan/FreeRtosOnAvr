   1               		.file	"vt100.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 190               		.section	.rodata.str1.1,"aMS",@progbits,1
 191               	.LC0:
 192 0000 1B63 00   		.string	"\033c"
 193               		.text
 196               	.global	vt100Init
 198               	vt100Init:
 199               		.stabd	46,0,0
   1:../../../../Lib/vt100.c **** /*! \file vt100.c \brief VT100 terminal function library. */
   2:../../../../Lib/vt100.c **** //*****************************************************************************
   3:../../../../Lib/vt100.c **** //
   4:../../../../Lib/vt100.c **** // File Name	: 'vt100.c'
   5:../../../../Lib/vt100.c **** // Title		: VT100 terminal function library
   6:../../../../Lib/vt100.c **** // Author		: Pascal Stang - Copyright (C) 2002
   7:../../../../Lib/vt100.c **** // Created		: 2002.08.27
   8:../../../../Lib/vt100.c **** // Revised		: 2002.08.27
   9:../../../../Lib/vt100.c **** // Version		: 0.1
  10:../../../../Lib/vt100.c **** // Target MCU	: Atmel AVR Series
  11:../../../../Lib/vt100.c **** // Editor Tabs	: 4
  12:../../../../Lib/vt100.c **** //
  13:../../../../Lib/vt100.c **** // NOTE: This code is currently below version 1.0, and therefore is considered
  14:../../../../Lib/vt100.c **** // to be lacking in some functionality or documentation, or may not be fully
  15:../../../../Lib/vt100.c **** // tested.  Nonetheless, you can expect most functions to work.
  16:../../../../Lib/vt100.c **** //
  17:../../../../Lib/vt100.c **** // This code is distributed under the GNU Public License
  18:../../../../Lib/vt100.c **** //		which can be found at http://www.gnu.org/licenses/gpl.txt
  19:../../../../Lib/vt100.c **** //
  20:../../../../Lib/vt100.c **** //*****************************************************************************
  21:../../../../Lib/vt100.c **** 
  22:../../../../Lib/vt100.c **** #ifndef WIN32
  23:../../../../Lib/vt100.c **** 	#include <avr/io.h>
  24:../../../../Lib/vt100.c **** 	#include <avr/interrupt.h>
  25:../../../../Lib/vt100.c **** 	#include <avr/pgmspace.h>
  26:../../../../Lib/vt100.c **** #endif
  27:../../../../Lib/vt100.c **** 
  28:../../../../Lib/vt100.c **** #include "main.h"
  29:../../../../Lib/vt100.c **** #include "vt100.h"
  30:../../../../Lib/vt100.c **** #include <stdio.h>
  31:../../../../Lib/vt100.c **** 
  32:../../../../Lib/vt100.c **** // Program ROM constants
  33:../../../../Lib/vt100.c **** 
  34:../../../../Lib/vt100.c **** // Global variables
  35:../../../../Lib/vt100.c **** 
  36:../../../../Lib/vt100.c **** // Functions
  37:../../../../Lib/vt100.c **** void vt100Init(cmdState_t *state)
  38:../../../../Lib/vt100.c **** {
 201               	.LM0:
 202               	.LFBB1:
 203               	/* prologue: function */
 204               	/* frame size = 0 */
 205               	/* stack size = 0 */
 206               	.L__stack_usage = 0
  39:../../../../Lib/vt100.c ****   // initializes terminal to "power-on" settings
  40:../../../../Lib/vt100.c ****   // ESC c
  41:../../../../Lib/vt100.c **** 
  42:../../../../Lib/vt100.c ****  fprintf_P(state->myStdInOut, "\x1B\x63");
 208               	.LM1:
 209 0000 20E0      		ldi r18,lo8(.LC0)
 210 0002 30E0      		ldi r19,hi8(.LC0)
 211 0004 3F93      		push r19
 212 0006 2F93      		push r18
 213 0008 FC01      		movw r30,r24
 214 000a 238D      		ldd r18,Z+27
 215 000c 2F93      		push r18
 216 000e 828D      		ldd r24,Z+26
 217 0010 8F93      		push r24
 218 0012 0E94 0000 		call fprintf_P
 219 0016 0F90      		pop __tmp_reg__
 220 0018 0F90      		pop __tmp_reg__
 221 001a 0F90      		pop __tmp_reg__
 222 001c 0F90      		pop __tmp_reg__
 223 001e 0895      		ret
 225               	.Lscope1:
 227               		.stabd	78,0,0
 228               		.section	.rodata.str1.1
 229               	.LC1:
 230 0003 1B5B 324A 		.string	"\033[2J"
 230      00
 231               		.text
 234               	.global	vt100ClearScreen
 236               	vt100ClearScreen:
 237               		.stabd	46,0,0
  43:../../../../Lib/vt100.c **** }
  44:../../../../Lib/vt100.c **** 
  45:../../../../Lib/vt100.c **** void vt100ClearScreen(cmdState_t *state)
  46:../../../../Lib/vt100.c **** {
 239               	.LM2:
 240               	.LFBB2:
 241               	/* prologue: function */
 242               	/* frame size = 0 */
 243               	/* stack size = 0 */
 244               	.L__stack_usage = 0
  47:../../../../Lib/vt100.c ****   // ESC [ 2 J
  48:../../../../Lib/vt100.c ****   fprintf_P(state->myStdInOut, "\x1B[2J");
 246               	.LM3:
 247 0020 20E0      		ldi r18,lo8(.LC1)
 248 0022 30E0      		ldi r19,hi8(.LC1)
 249 0024 3F93      		push r19
 250 0026 2F93      		push r18
 251 0028 FC01      		movw r30,r24
 252 002a 238D      		ldd r18,Z+27
 253 002c 2F93      		push r18
 254 002e 828D      		ldd r24,Z+26
 255 0030 8F93      		push r24
 256 0032 0E94 0000 		call fprintf_P
 257 0036 0F90      		pop __tmp_reg__
 258 0038 0F90      		pop __tmp_reg__
 259 003a 0F90      		pop __tmp_reg__
 260 003c 0F90      		pop __tmp_reg__
 261 003e 0895      		ret
 263               	.Lscope2:
 265               		.stabd	78,0,0
 266               		.section	.rodata.str1.1
 267               	.LC2:
 268 0008 1B5B 2564 		.string	"\033[%dm"
 268      6D00 
 269               		.text
 273               	.global	vt100SetAttr
 275               	vt100SetAttr:
 276               		.stabd	46,0,0
  49:../../../../Lib/vt100.c **** }
  50:../../../../Lib/vt100.c **** 
  51:../../../../Lib/vt100.c **** void vt100SetAttr(uint8_t attr, cmdState_t *state)
  52:../../../../Lib/vt100.c **** {
 278               	.LM4:
 279               	.LFBB3:
 280               	/* prologue: function */
 281               	/* frame size = 0 */
 282               	/* stack size = 0 */
 283               	.L__stack_usage = 0
  53:../../../../Lib/vt100.c ****   // ESC [ Ps m
  54:../../../../Lib/vt100.c ****   fprintf_P(state->myStdInOut, "\x1B[%dm",attr);
 285               	.LM5:
 286 0040 1F92      		push __zero_reg__
 287 0042 8F93      		push r24
 288 0044 80E0      		ldi r24,lo8(.LC2)
 289 0046 90E0      		ldi r25,hi8(.LC2)
 290 0048 9F93      		push r25
 291 004a 8F93      		push r24
 292 004c FB01      		movw r30,r22
 293 004e 838D      		ldd r24,Z+27
 294 0050 8F93      		push r24
 295 0052 828D      		ldd r24,Z+26
 296 0054 8F93      		push r24
 297 0056 0E94 0000 		call fprintf_P
 298 005a 0F90      		pop __tmp_reg__
 299 005c 0F90      		pop __tmp_reg__
 300 005e 0F90      		pop __tmp_reg__
 301 0060 0F90      		pop __tmp_reg__
 302 0062 0F90      		pop __tmp_reg__
 303 0064 0F90      		pop __tmp_reg__
 304 0066 0895      		ret
 306               	.Lscope3:
 308               		.stabd	78,0,0
 309               		.section	.rodata.str1.1
 310               	.LC3:
 311 000e 1B5B 3F32 		.string	"\033[?25h"
 311      3568 00
 312               	.LC4:
 313 0015 1B5B 3F32 		.string	"\033[?25l"
 313      356C 00
 314               		.text
 318               	.global	vt100SetCursorMode
 320               	vt100SetCursorMode:
 321               		.stabd	46,0,0
  55:../../../../Lib/vt100.c **** }
  56:../../../../Lib/vt100.c **** 
  57:../../../../Lib/vt100.c **** void vt100SetCursorMode(uint8_t visible, cmdState_t *state)
  58:../../../../Lib/vt100.c **** {
 323               	.LM6:
 324               	.LFBB4:
 325               	/* prologue: function */
 326               	/* frame size = 0 */
 327               	/* stack size = 0 */
 328               	.L__stack_usage = 0
 329 0068 FB01      		movw r30,r22
 330 006a 238D      		ldd r18,Z+27
 331 006c 928D      		ldd r25,Z+26
  59:../../../../Lib/vt100.c ****   if(visible)
 333               	.LM7:
 334 006e 8823      		tst r24
 335 0070 01F0      		breq .L5
  60:../../../../Lib/vt100.c ****   // ESC [ ? 25 h
  61:../../../../Lib/vt100.c ****     fprintf_P(state->myStdInOut, "\x1B[?25h");
 337               	.LM8:
 338 0072 40E0      		ldi r20,lo8(.LC3)
 339 0074 50E0      		ldi r21,hi8(.LC3)
 340 0076 00C0      		rjmp .L7
 341               	.L5:
  62:../../../../Lib/vt100.c ****   else
  63:../../../../Lib/vt100.c ****   // ESC [ ? 25 l
  64:../../../../Lib/vt100.c ****     fprintf_P(state->myStdInOut, "\x1B[?25l");
 343               	.LM9:
 344 0078 40E0      		ldi r20,lo8(.LC4)
 345 007a 50E0      		ldi r21,hi8(.LC4)
 346               	.L7:
 347 007c 5F93      		push r21
 348 007e 4F93      		push r20
 349 0080 2F93      		push r18
 350 0082 9F93      		push r25
 351 0084 0E94 0000 		call fprintf_P
 352 0088 0F90      		pop __tmp_reg__
 353 008a 0F90      		pop __tmp_reg__
 354 008c 0F90      		pop __tmp_reg__
 355 008e 0F90      		pop __tmp_reg__
 356 0090 0895      		ret
 358               	.Lscope4:
 360               		.stabd	78,0,0
 361               		.section	.rodata.str1.1
 362               	.LC5:
 363 001c 1B5B 2564 		.string	"\033[%d;%dH"
 363      3B25 6448 
 363      00
 364               		.text
 369               	.global	vt100SetCursorPos
 371               	vt100SetCursorPos:
 372               		.stabd	46,0,0
  65:../../../../Lib/vt100.c **** }
  66:../../../../Lib/vt100.c **** 
  67:../../../../Lib/vt100.c **** void vt100SetCursorPos(uint8_t line, uint8_t col, cmdState_t *state)
  68:../../../../Lib/vt100.c **** {
 374               	.LM10:
 375               	.LFBB5:
 376               	/* prologue: function */
 377               	/* frame size = 0 */
 378               	/* stack size = 0 */
 379               	.L__stack_usage = 0
  69:../../../../Lib/vt100.c ****   // ESC [ Pl ; Pc H
  70:../../../../Lib/vt100.c ****   fprintf_P(state->myStdInOut, "\x1B[%d;%dH",line,col);
 381               	.LM11:
 382 0092 1F92      		push __zero_reg__
 383 0094 6F93      		push r22
 384 0096 1F92      		push __zero_reg__
 385 0098 8F93      		push r24
 386 009a 80E0      		ldi r24,lo8(.LC5)
 387 009c 90E0      		ldi r25,hi8(.LC5)
 388 009e 9F93      		push r25
 389 00a0 8F93      		push r24
 390 00a2 FA01      		movw r30,r20
 391 00a4 838D      		ldd r24,Z+27
 392 00a6 8F93      		push r24
 393 00a8 828D      		ldd r24,Z+26
 394 00aa 8F93      		push r24
 395 00ac 0E94 0000 		call fprintf_P
 396 00b0 8DB7      		in r24,__SP_L__
 397 00b2 9EB7      		in r25,__SP_H__
 398 00b4 0896      		adiw r24,8
 399 00b6 0FB6      		in __tmp_reg__,__SREG__
 400 00b8 F894      		cli
 401 00ba 9EBF      		out __SP_H__,r25
 402 00bc 0FBE      		out __SREG__,__tmp_reg__
 403 00be 8DBF      		out __SP_L__,r24
 404 00c0 0895      		ret
 406               	.Lscope5:
 408               		.stabd	78,0,0
 409               		.comm	xSemaphoreRs485,2,1
 410               		.comm	cliBuffer,128,1
 414               	.Letext0:
 415               		.ident	"GCC: (GNU) 4.9.2"
 416               	.global __do_copy_data
 417               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 vt100.c
     /tmp/ccOea6ff.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccOea6ff.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccOea6ff.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccOea6ff.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccOea6ff.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccOea6ff.s:198    .text:0000000000000000 vt100Init
     /tmp/ccOea6ff.s:236    .text:0000000000000020 vt100ClearScreen
     /tmp/ccOea6ff.s:275    .text:0000000000000040 vt100SetAttr
     /tmp/ccOea6ff.s:320    .text:0000000000000068 vt100SetCursorMode
     /tmp/ccOea6ff.s:371    .text:0000000000000092 vt100SetCursorPos
                            *COM*:0000000000000002 xSemaphoreRs485
                            *COM*:0000000000000080 cliBuffer

UNDEFINED SYMBOLS
fprintf_P
__do_copy_data
__do_clear_bss
